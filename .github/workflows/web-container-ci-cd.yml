name: Web Container CI/CD (Archived)

on:
  push:
    branches:
      - main
    paths:
      - 'web-container/**'
      - '.github/workflows/web-container-ci-cd.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'web-container/**'
      - '.github/workflows/web-container-ci-cd.yml'

jobs:
  build-test-deploy:
    # Archived: keep workflow definition for reference but skip execution
    if: ${{ false }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Skip archived workflow
        run: echo "Web container CI/CD is archived and no longer runs automatically."
        
      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      # Install required packages for testing
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          cd web-container
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov pytest-flask requests
          
      # Run tests
      - name: Run tests with coverage
        run: |
          cd web-container
          pytest tests/ --cov=app --cov-report=xml
          
      # Upload test coverage reports
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./web-container/coverage.xml
          flags: web-container
          fail_ci_if_error: false
          
      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ericzzy/together-web:latest web-container
          
      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Push image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ericzzy/together-web:latest
          
      # Deploy to DigitalOcean using docker-compose
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            # Change to project directory
            cd /opt/together/5-final-team-ez-squad-5-0
            
            # Pull latest images
            docker compose pull
            
            # Restart only the web container
            docker compose stop web
            docker compose rm -f web
            docker compose up -d web
